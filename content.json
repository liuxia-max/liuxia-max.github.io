{"meta":{"title":"liu's blog","subtitle":"later","description":"earlier","author":"liuxia-max","url":"http://liuxia-max.github.io","root":"/"},"pages":[{"title":"关于我","date":"2019-12-06T03:26:56.000Z","updated":"2019-12-06T03:27:56.443Z","comments":true,"path":"about/index.html","permalink":"http://liuxia-max.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"hello-world","slug":"hello-world","date":"2019-12-08T08:09:42.789Z","updated":"2019-12-08T08:09:48.316Z","comments":true,"path":"2019/12/08/hello-world/","link":"","permalink":"http://liuxia-max.github.io/2019/12/08/hello-world/","excerpt":"","text":"## 汉诺塔游戏 ---- 汉诺塔游戏实为一种数学家发明的游戏，游戏如下: 有三根杆A，B，C。A杆上有n（n&gt;1）个穿孔圆盘，盘的尺寸由上到下依次变大。要求按下列规则将所有的圆盘移至C杆：1.每次只能移动一个穿孔圆盘。2.大盘不能叠在小盘上面。 汉诺塔游戏和斐波那契数列一样是典型的可通过递归思维解决，或者说斐波那契数列就是通过递归定义的. f0=0 — f1=1 — fn=fn-1+fn-2 我理解的递归便是重复某种相同的操作（算法，方法又或语句）。对于斐波那契数列来讲，它要重复的操作是计算本项（项&gt;1）的前两项之和。而每一项又是在计算该项的前两项之和。而对于汉诺塔游戏来讲，首先通过画图实际思考可以轻松的找出n=2或者n=3的。而在此基础上，总结对于n+1个圆盘的移法： 1.将n个圆盘移动到B盘上. 2.将n+1个圆盘移动到C上。 3.以同样方法将B盘上的n个圆盘移动到C盘上。 其中的规律，当n=1时，直接A—&gt;C,现目标是B盘，故B，C盘位置交换即可 第二步都是A—&gt;C 第三步原为A—C，现为B—C，A，B盘交换位置。 实现如下： public void h(int n,char A,char C,char B){ if(n==1){syso(A+”—&gt;”+C);} else{ h(n-1,A,B,C); h(1,A,C,B); h(n-1,B,C,A);}}","categories":[],"tags":[]},{"title":"firstblog","slug":"firstblog","date":"2019-11-21T11:34:26.000Z","updated":"2019-11-21T11:37:08.591Z","comments":true,"path":"2019/11/21/firstblog/","link":"","permalink":"http://liuxia-max.github.io/2019/11/21/firstblog/","excerpt":"","text":"##just begin!","categories":[],"tags":[]},{"title":"汉诺塔","slug":"汉诺塔","date":"2019-11-21T08:44:57.157Z","updated":"2019-12-08T07:53:00.636Z","comments":true,"path":"2019/11/21/汉诺塔/","link":"","permalink":"http://liuxia-max.github.io/2019/11/21/%E6%B1%89%E8%AF%BA%E5%A1%94/","excerpt":"","text":"#汉诺塔游戏 ---- 汉诺塔游戏实为一种数学家发明的游戏，游戏如下： > 有三根杆A，B，C。A杆上有n（n>1）个穿孔圆盘，盘的尺寸由上到下依次变大。要求按下列规则将所有的圆盘移至C杆： ---- 1.每次只能移动一个穿孔圆盘。 2.大盘不能叠在小盘上面。 ---- 汉诺塔游戏和斐波那契数列一样是典型的可通过递归思维解决，或者说斐波那契数列就是通过递归定义的。 > f0=0 --- f1=1 --- fn=fn-1+fn-2 我理解的递归便是重复某种相同的操作（算法，方法又或语句）。对于斐波那契数列来讲，它要重复的操作是计算本项（项>1）的前两项之和。而每一项又是在计算该项的前两项之和。 --- 而对于汉诺塔游戏来讲，首先通过画图实际思考可以轻松的找出n=2或者n=3的。而在此基础上，总结对于n+1个圆盘的移法： 1.将n个圆盘移动到B盘上。 2.将n+1个圆盘移动到C上。 3.以同样方法将B盘上的n个圆盘移动到C盘上。 其中的规律，当n=1时，直接A—>C,现目标是B盘，故B，C盘位置交换即可 第二步都是A—>C 第三步原为A—C，现为B—C，A，B盘交换位置。 实现如下： public void h(int n,char A,char C,char B){ if(n==1){syso(A+\"—>\"+C);} else{ h(n-1,A,B,C); h(1,A,C,B); h(n-1,B,C,A); } }","categories":[],"tags":[]}]}